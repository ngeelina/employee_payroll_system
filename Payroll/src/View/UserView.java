/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Controller.AttendanceController;
import java.awt.event.KeyEvent;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author Sam
 */
public class UserView extends javax.swing.JDialog {

    AttendanceController ac = new AttendanceController();
    private static int State;
    private static String User;
    
    
    /**
     * Creates new form AttendanceRecord
     */
    public UserView(java.awt.Frame parent, boolean modal, int state, String user) {
        super(parent, modal);
        setDefaultLookAndFeelDecorated(false);
        setIconImage(new ImageIcon(MainAdmin.class.getResource("images/i16x16/Attendance.png")).getImage());
        State = state;
        User = user;
        
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbl_scan = new javax.swing.JLabel();
        txt_emp_bar = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Record");
        setLocationByPlatform(true);
        setModal(true);
        setResizable(false);

        lbl_scan.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        lbl_scan.setIcon(new javax.swing.ImageIcon(getClass().getResource("/View/images/i16x16/scan.png"))); // NOI18N
        lbl_scan.setText("Scan the Employee Card");

        txt_emp_bar.setFont(new java.awt.Font("DialogInput", 0, 12)); // NOI18N
        txt_emp_bar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_emp_barKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(69, 69, 69)
                        .addComponent(lbl_scan))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(102, 102, 102)
                        .addComponent(txt_emp_bar, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(59, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addComponent(lbl_scan)
                .addGap(35, 35, 35)
                .addComponent(txt_emp_bar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(74, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txt_emp_barKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_emp_barKeyPressed
        int key = evt.getKeyCode();
        if (key == KeyEvent.VK_ENTER){
            String emp = txt_emp_bar.getText();
            if(emp.length() != 8){
                JOptionPane.showMessageDialog(null, "Please scan properly","Wrong",JOptionPane.INFORMATION_MESSAGE);
                txt_emp_bar.setText(null);
            }
            else{
                if(State == 1){     //Record attendance
                    String date = curr_dt();
                    ac.getAttendance().setEmp_bar(emp);
                    ac.getAttendance().setDate(date);
                    int i = ac.record();
                    if(i == 0){
                        JOptionPane.showMessageDialog(null, "ID not found","Error",JOptionPane.ERROR_MESSAGE);
                        txt_emp_bar.selectAll();
                    }
                    else if(i == 1){
                        JOptionPane.showMessageDialog(null, "Attendance recorded","Success",JOptionPane.PLAIN_MESSAGE);
                        dispose();
                    }
                    else if(i == 2){
                        JOptionPane.showMessageDialog(null, "Attendance already recorded","Warning",JOptionPane.WARNING_MESSAGE);
                        dispose();
                    }
                    else{
                        JOptionPane.showMessageDialog(null, "Error in recording","Error",JOptionPane.ERROR_MESSAGE);
                        txt_emp_bar.selectAll();
                    } 
                }
                else if(State == 2){    //View attendance
                    ac.getAttendance().setEmp_bar(emp);
                    int i = ac.view();
                    if(i == -1){
                        JOptionPane.showMessageDialog(null, "ID not found","Error",JOptionPane.ERROR_MESSAGE);
                        txt_emp_bar.selectAll();
                    }
                    else if(i == -2){
                        JOptionPane.showMessageDialog(null, "Error in fetching data","Error",JOptionPane.ERROR_MESSAGE);
                        txt_emp_bar.selectAll();
                    }
                    else{
                        JOptionPane.showMessageDialog(null, "Total Attendance = " + i,"Attendance Record",JOptionPane.PLAIN_MESSAGE);
                        dispose();
                    }
                }
                else{           //Generate payslip   
                    ac.getAttendance().setEmp_bar(emp);
                    dispose();
                    int i = ac.view();
                    if(i == -1){
                        JOptionPane.showMessageDialog(null, "ID not found","Error",JOptionPane.ERROR_MESSAGE);
                        txt_emp_bar.selectAll();
                    }
                    else if(i == -2){
                        JOptionPane.showMessageDialog(null, "Error in fetching data","Error",JOptionPane.ERROR_MESSAGE);
                        txt_emp_bar.selectAll();
                    }
                    else if(i == 0){
                        JOptionPane.showMessageDialog(null, "Attendance not enough(i.e. 0)","Warning",JOptionPane.WARNING_MESSAGE);
                    }
                    else{
                        PayslipGenerate pg = new PayslipGenerate(null, true, emp, User);
                        pg.setVisible(true);
                    }
                }
            }
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_emp_barKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UserView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UserView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UserView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UserView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                UserView dialog = new UserView(new javax.swing.JFrame(), true, State, User);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel lbl_scan;
    private javax.swing.JPasswordField txt_emp_bar;
    // End of variables declaration//GEN-END:variables

    public static String curr_dt(){
        Date dt = new Date();
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        String currentTime = sdf.format(dt);
        return currentTime;
    }
}
